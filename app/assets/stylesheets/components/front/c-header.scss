.c-header {
  position: relative;
  font-family: $font-family-1; // Needed as the map CSS overrides it
  z-index: 5;

  @if $theme == 2 {
    color: $color-3;
  } @else {
    color: $color-1;
    font-size: $font-size-normal;
  }

  a {
    @if $theme == 2 {
      background-color: transparent;
    } @else {
      text-decoration: none;
    }
  }

  > .mobile-menu {
    display: flex;
    align-items: flex-start;
    justify-content: space-between;
    height: 50px;
    // The padding is the same as the one of the wrapper but needs
    // to be repeated as the styles included with the standalone map
    // interferes
    padding: 0 $wrapper-mobile-padding;
    overflow: visible;

    @media #{$mq-mobile} {
      padding: 0 $wrapper-tablet-padding;
    }

    @media #{$mq-tablet} {
      padding: 0 $wrapper-padding;
    }

    @if $theme == 2 {
      background-color: $color-7;
    } @else {
      background-color: $color-1;
    }

    @media #{$mq-tablet} {
      display: none;
    }

    > .logo-container {
      margin-right: 35px;
      text-transform: uppercase;
      z-index: 1; // Make the logo on top of the flag border

      .logo {
        display: block;
        width: 80px;
        height: 80px;
        border: 1px solid;
        border-top: 0;
        background-color: $color-3;
        background-repeat: no-repeat;
        background-position: center center;
        background-size: contain;

        @if $theme == 2 {
          border-color: rgba($color-4, .2);
        } @else {
          border-color: rgba($color-1, .3);
        }
      }
    }

    .hamburger-menu {
      position: relative;
      top: 50%;
      width: 28px;
      height: 20px;
      transform: translateY(-50%);
      cursor: pointer;
      z-index: 12;

      > div {
        position: absolute;
        left: 0;
        width: 100%;
        height: 3px;
        transition: transform .3s ease-out, opacity .3s ease-out;
        background-color: $color-3;

        &:first-of-type {
          top: 0;
        }

        &:nth-of-type(2) {
          top: 50%;
          transform: translateY(-50%);
        }

        &:last-of-type {
          bottom: 0;
        }
      }
    }
  }

  > .mobile-drawer {
    position: fixed;
    top:  0;
    left: -100%;
    width: 100%;
    height: 100vh;
    padding-top: 30px;
    transition: transform .3s ease-out;
    color: $color-3;
    box-shadow: 1px 0 1px 0 rgba($color-4, .2);
    z-index: 10;
    will-change: transform;
    overflow-y: auto;
    -webkit-overflow-scrolling: touch;

    @if $theme == 2 {
      background-color: $color-7;
    } @else {
      background-color: $color-1;
    }

    // This media query shouldn't be necessary but as the user could rotate
    // their device while the drawer is open, we want to make sure it's hidden
    // because otherway, they won't be able to close it without rotating back
    @media #{$mq-tablet} {
      display: none;
    }

    a { color: currentColor; }

    ul {
      display: block;
      margin:  0 0 30px;
      padding: 0;
      list-style: none;

      &:last-of-type { margin-bottom: 0; }

      li {
        display: block;
        padding: 10px 0;

        ul {
          padding-left: 15px;
        }
      }

    }

    &.-opened {
      transform: translateX(100%);

      + .mobile-menu .hamburger-menu {
        > div {
          &:first-of-type {
            transform: translateY(9px) rotate(-45deg);
            transform-origin: center;
          }

          &:nth-of-type(2) {
            opacity: 0;
          }

          &:last-of-type {
            transform: translateY(-8px) rotate(45deg);
            transform-origin: center;
          }
        }
      }
    }
  }

  > .desktop-menu {
    display: none;
    height: 50px;

    @if $theme == 2 {
      background-color: $color-7;
    } @else {
      background-color: $color-3;
    }

    @media #{$mq-tablet} {
      display: flex;
      flex-wrap: wrap;
      align-items: flex-start;
      justify-content: flex-start;
    }

    > .logo-container {
      // By using flex-grow and flex-shrink, we specify that we want the element
      // to push the others to the right and that it can't be shrink when space
      // is missing
      flex-grow: 1;
      flex-shrink: 0;
      margin-right: 35px;
      text-transform: uppercase;
      z-index: 1; // Make the logo on top of the flag border
      pointer-events: none; // Its overflow the breadcrumbs

      .logo {
        display: block;
        width: 80px;
        height: 80px;
        border: 1px solid;
        border-top: 0;
        background-color: $color-3;
        background-repeat: no-repeat;
        background-position: center center;
        background-size: contain;
        pointer-events: all; // We want the logo to receive the events

        @if $theme == 2 {
          border-color: rgba($color-4, .2);
        } @else {
          border-color: rgba($color-1, .3);
        }
      }
    }

    > ul {
      height: 100%;
      margin:  0;
      padding: 0;
      list-style: none;

      > li {
        display: inline-block;
        position: relative;
        height: 100%;
        padding: 0 25px;
        line-height: 50px;
        text-transform: uppercase;

        &.-active {
          @if $theme == 2 {
            background-color: rgba($color-3, .1);
          } @else {
            background-color: rgba($color-1, .1);
          }
        }

        // If the menu has just one element (such as the lang selector), we don't want the border
        &:last-of-type {
          &:not(:first-of-type) {
            @if $theme == 2 {
              border-right: 1px solid rgba($color-3, .1);
            } @else {
              border-right: 1px solid rgba($color-1, .1);
            }
          }
        }

        &.dropdown-item {
          cursor: pointer;
          z-index: 1; // On top of the breadcrumbs/section menu

          ul {
            position: absolute;
            top: 0;
            left: -15px;
            width: calc(100% + 30px);
            margin: 0;
            padding: 0;
            transition: opacity .2s ease-out, visibility 0s .2s;
            background-color: $color-3;
            list-style: none;
            box-shadow: 0 2px 3px 0 rgba($color-7, .3);
            cursor: auto;
            opacity: 0;
            visibility: hidden;
            will-change: transform, opacity;

            // Black border
            &::after {
              display:  block;
              position: absolute;
              top: 50px;
              left: 0;
              width:  100%;
              height: 5px;
              content: '';

              @if $theme == 2 {
                background-color: $color-7;
              } @else {
                background-color: $color-1;
              }
            }

            li {
              display: block;
              border-bottom: 1px solid $color-9;
              text-align: center;

              @if $theme == 2 {
                color: $color-6;
              }

              // The first item isn't a sub-menu element but a copy of the parent element
              &:first-of-type {
                height: 50px;
                line-height: 50px;
                cursor: pointer;
              }

              // We need some extra space to put the black border
              &:nth-of-type(2) {
                height: 55px;
                padding-top: 5px;
              }

              &:not(:first-of-type) {
                line-height: 1.3;
                text-transform: none;

                &:hover {
                  @if $theme == 2 {
                    background-color: $color-8;
                  } @else {
                    background-color: rgba($color-1, .1);
                  }

                }

                a {
                  padding: 15px 5px;

                  @if $theme == 1 {
                    color: $color-6;
                  }
                }
              }

              &:last-of-type {
                border: 0;
              }

              a {
                display: block;
                width: 100%;
                height: 100%;
                padding: 0 14px;
              }
            }
          }

          &:hover {
            > ul {
              transition: opacity .2s ease-out;
              opacity: 1;
              visibility: visible;
            }
          }

          @if $theme == 2 {
            &.-active {
              > ul {
                li:first-of-type {
                  background-color: rgba($color-3, .1);
                }
              }
            }
          }
        }
      }

      &:last-of-type {
        margin: 0;

        > li {
          &:last-of-type {
            padding-right: 0;
          }
        }
      }

    }

  }

  > .flag-border {
    display: flex;
    width: 100%;
    height: 5px;
    z-index: -1;

    @if $theme == 2 {
      background-color: $color-7;
    } @else {
      background-color: $color-1;
    }

    > div {
      flex-grow: 1;

      @if $theme == 1 {
        display: none;
      }
    }
  }

  > .sub-menu {
    display: none;
    height: 0; // Trick so the content will be on top of what's following
    color: $color-3;
    font-size: $font-size-small;

    @media #{$mq-tablet} {
      display: block;
    }

    a {
      color: $color-3;
    }

    > .wrapper {
      line-height: 25px;

      @if $theme == 2 {
        height: 25px;
        background-color: rgba($color-7, .7);
      } @else {
        position: relative;
        top: -5px;
        height: 30px;
        background-color: rgba($color-1, .7);
      }
    }

    .content {
      display: flex;
      align-items: center;
      justify-content: space-between;
      padding-left: 90px; // Width logo (80px) + padding (10px)
      height: 100%;

      > .breadcrumbs {
        height: 100%;

        li {
          height: 100%;
          font-weight: $font-weight-bold;
          text-transform: uppercase;

          @if $theme == 1 {
            padding-top: 5px;
          }

          &:not(:last-of-type):after {
            content: ' > ';
          }
        }
      }

      > .sections {
        display: inline-block;
        height: 100%;

        li {
          height: 100%;
          padding: 0 14px;
          border-left: 1px solid rgba($color-3, .2);
          letter-spacing: .1px;

          @if $theme == 1 {
            padding-top: 5px;
          }

          &:last-of-type {
            padding-right: 0;
          }
        }
      }
    }
  }

}
